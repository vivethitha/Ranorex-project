///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse2_Vehicle_Details recording.
    /// </summary>
    [TestModule("0b2a14d5-d448-4afa-a6a1-38aa6a6e3073", ModuleType.Recording, 1)]
    public partial class Adverse2_Vehicle_Details : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse2_Vehicle_Details instance = new Adverse2_Vehicle_Details();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse2_Vehicle_Details()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse2_Vehicle_Details Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.LabelTagYes1'", repo.ApplicationUnderTest.LabelTagYes1Info, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.LabelTagYes1Info.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'MH15 HJ 1002' with focus on 'ApplicationUnderTest.LicensePlate1'.", repo.ApplicationUnderTest.LicensePlate1Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.LicensePlate1.PressKeys("MH15 HJ 1002");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to 'KY' on item 'ApplicationUnderTest.LicensePlateState1'.", repo.ApplicationUnderTest.LicensePlateState1Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.LicensePlateState1.Element.SetAttributeValue("TagValue", "KY");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Manual_Model_Details' at Center.", repo.ApplicationUnderTest.Manual_Model_DetailsInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Manual_Model_Details.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '2016' on item 'ApplicationUnderTest.AD2_Vin_Year'.", repo.ApplicationUnderTest.AD2_Vin_YearInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD2_Vin_Year.Element.SetAttributeValue("TagValue", "2016");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(6));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AD2_VIN_Make' at Center.", repo.ApplicationUnderTest.AD2_VIN_MakeInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AD2_VIN_Make.Click();
            Delay.Milliseconds(29700);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Honda' with focus on 'ApplicationUnderTest.AD2_VIN_Make'.", repo.ApplicationUnderTest.AD2_VIN_MakeInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AD2_VIN_Make.PressKeys("Honda");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}'.", new RecordItemIndex(10));
            Keyboard.Press("{Down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.AD2_VIN_Make_Honda' at Center.", repo.ApplicationUnderTest.AD2_VIN_Make_HondaInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AD2_VIN_Make_Honda.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(12));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(13));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(14));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Civic' with focus on 'ApplicationUnderTest.AD2_VIN_Model'.", repo.ApplicationUnderTest.AD2_VIN_ModelInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AD2_VIN_Model.PressKeys("Civic");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(16));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit_4' at 43;11.", repo.ApplicationUnderTest.Submit_4Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.Submit_4.Click("43;11");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
