///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsuredDetails_Agent_Information recording.
    /// </summary>
    [TestModule("27443c57-0776-4da9-8040-fd51e64c91e9", ModuleType.Recording, 1)]
    public partial class InsuredDetails_Agent_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static InsuredDetails_Agent_Information instance = new InsuredDetails_Agent_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsuredDetails_Agent_Information()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsuredDetails_Agent_Information Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Agent_Name' with focus on 'ApplicationUnderTest.AgentName'.", repo.ApplicationUnderTest.AgentNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.AgentName.PressKeys("Agent_Name");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AD_AddressLine1' with focus on 'ApplicationUnderTest.AD_AddressLine1'.", repo.ApplicationUnderTest.AD_AddressLine1Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AD_AddressLine1.PressKeys("AD_AddressLine1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AD_AddressLine2' with focus on 'ApplicationUnderTest.AD_AddressLine2'.", repo.ApplicationUnderTest.AD_AddressLine2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AD_AddressLine2.PressKeys("AD_AddressLine2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AD_City' with focus on 'ApplicationUnderTest.AD_City'.", repo.ApplicationUnderTest.AD_CityInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AD_City.PressKeys("AD_City");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to 'GA' on item 'ApplicationUnderTest.AD_State'.", repo.ApplicationUnderTest.AD_StateInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AD_State.Element.SetAttributeValue("TagValue", "GA");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '30005' with focus on 'ApplicationUnderTest.AD_Zipcode'.", repo.ApplicationUnderTest.AD_ZipcodeInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD_Zipcode.PressKeys("30005");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(8));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '9500095008' with focus on 'ApplicationUnderTest.AgentDetails_AgentPhone'.", repo.ApplicationUnderTest.AgentDetails_AgentPhoneInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AgentDetails_AgentPhone.PressKeys("9500095008");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'agentemail@gmail.com' with focus on 'ApplicationUnderTest.AgentDetails_Email'.", repo.ApplicationUnderTest.AgentDetails_EmailInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AgentDetails_Email.PressKeys("agentemail@gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '22112' with focus on 'ApplicationUnderTest.AgentDetails_Ext'.", repo.ApplicationUnderTest.AgentDetails_ExtInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AgentDetails_Ext.PressKeys("22112");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '9500095009' with focus on 'ApplicationUnderTest.AgentDetails_FaxNo'.", repo.ApplicationUnderTest.AgentDetails_FaxNoInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AgentDetails_FaxNo.PressKeys("9500095009");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
